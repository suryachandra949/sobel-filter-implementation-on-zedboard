// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module newsob_AXIvideo2Mat_DMA (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        img_rows_V_dout,
        img_rows_V_empty_n,
        img_rows_V_read,
        img_cols_V_dout,
        img_cols_V_empty_n,
        img_cols_V_read,
        img_data_stream_V_din,
        img_data_stream_V_full_n,
        img_data_stream_V_write,
        img_rows_V_out_din,
        img_rows_V_out_full_n,
        img_rows_V_out_write,
        img_cols_V_out_din,
        img_cols_V_out_full_n,
        img_cols_V_out_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st5_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] INPUT_STREAM_TDATA;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
input  [0:0] INPUT_STREAM_TKEEP;
input  [0:0] INPUT_STREAM_TSTRB;
input  [0:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [0:0] INPUT_STREAM_TID;
input  [0:0] INPUT_STREAM_TDEST;
input  [11:0] img_rows_V_dout;
input   img_rows_V_empty_n;
output   img_rows_V_read;
input  [11:0] img_cols_V_dout;
input   img_cols_V_empty_n;
output   img_cols_V_read;
output  [7:0] img_data_stream_V_din;
input   img_data_stream_V_full_n;
output   img_data_stream_V_write;
output  [11:0] img_rows_V_out_din;
input   img_rows_V_out_full_n;
output   img_rows_V_out_write;
output  [11:0] img_cols_V_out_din;
input   img_cols_V_out_full_n;
output   img_cols_V_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg INPUT_STREAM_TREADY;
reg img_rows_V_read;
reg img_cols_V_read;
reg img_data_stream_V_write;
reg img_rows_V_out_write;
reg img_cols_V_out_write;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm = 4'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_23;
reg   [11:0] p_i_reg_136;
reg   [11:0] rows_V_reg_173;
reg    ap_sig_bdd_74;
reg   [11:0] cols_V_reg_178;
wire   [0:0] exitcond5_i_fu_147_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_86;
wire   [11:0] i_V_fu_152_p2;
reg   [11:0] i_V_reg_187;
wire   [0:0] exitcond_i_fu_158_p2;
reg   [0:0] exitcond_i_reg_192;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_bdd_97;
reg    ap_sig_bdd_103;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_110;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
wire   [11:0] j_V_fu_163_p2;
reg   [7:0] tmp_data_V_reg_201;
reg   [11:0] p_1_i_reg_125;
reg    ap_sig_cseq_ST_st5_fsm_3;
reg    ap_sig_bdd_137;
reg   [3:0] ap_NS_fsm;




always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond5_i_fu_147_p2 == ap_const_lv1_0))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_103 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_110 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & ~(exitcond_i_fu_158_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond5_i_fu_147_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond_i_fu_158_p2 == ap_const_lv1_0) & ~((ap_sig_bdd_103 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_110 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond5_i_fu_147_p2 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_103 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_110 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & ~(exitcond_i_fu_158_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3)) begin
        p_1_i_reg_125 <= i_V_reg_187;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_74)) begin
        p_1_i_reg_125 <= ap_const_lv12_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond_i_fu_158_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_103 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_110 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        p_i_reg_136 <= j_V_fu_163_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond5_i_fu_147_p2 == ap_const_lv1_0))) begin
        p_i_reg_136 <= ap_const_lv12_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_74)) begin
        cols_V_reg_178 <= img_cols_V_dout;
        rows_V_reg_173 <= img_rows_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_103 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_110 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        exitcond_i_reg_192 <= exitcond_i_fu_158_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_V_reg_187 <= i_V_fu_152_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond_i_fu_158_p2 == ap_const_lv1_0) & ~((ap_sig_bdd_103 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_110 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        tmp_data_V_reg_201 <= INPUT_STREAM_TDATA;
    end
end

always @ (exitcond_i_fu_158_p2 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_103 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_110 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond_i_fu_158_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_103 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_110 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        INPUT_STREAM_TREADY = ap_const_logic_1;
    end else begin
        INPUT_STREAM_TREADY = ap_const_logic_0;
    end
end

always @ (ap_done_reg or exitcond5_i_fu_147_p2 or ap_sig_cseq_ST_st2_fsm_1) begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond5_i_fu_147_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (exitcond5_i_fu_147_p2 or ap_sig_cseq_ST_st2_fsm_1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond5_i_fu_147_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_97) begin
    if (ap_sig_bdd_97) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_23) begin
    if (ap_sig_bdd_23) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_86) begin
    if (ap_sig_bdd_86) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_137) begin
    if (ap_sig_bdd_137) begin
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_74) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_74)) begin
        img_cols_V_out_write = ap_const_logic_1;
    end else begin
        img_cols_V_out_write = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_74) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_74)) begin
        img_cols_V_read = ap_const_logic_1;
    end else begin
        img_cols_V_read = ap_const_logic_0;
    end
end

always @ (exitcond_i_reg_192 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_103 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_110 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond_i_reg_192 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_103 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_110 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        img_data_stream_V_write = ap_const_logic_1;
    end else begin
        img_data_stream_V_write = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_74) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_74)) begin
        img_rows_V_out_write = ap_const_logic_1;
    end else begin
        img_rows_V_out_write = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_74) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_74)) begin
        img_rows_V_read = ap_const_logic_1;
    end else begin
        img_rows_V_read = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or ap_sig_bdd_74 or exitcond5_i_fu_147_p2 or exitcond_i_fu_158_p2 or ap_sig_bdd_103 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_110 or ap_reg_ppiten_pp0_it1) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_74) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond5_i_fu_147_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_103 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_110 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & ~(exitcond_i_fu_158_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_103 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_110 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & ~(exitcond_i_fu_158_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st5_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st5_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (INPUT_STREAM_TVALID or exitcond_i_fu_158_p2) begin
    ap_sig_bdd_103 = ((INPUT_STREAM_TVALID == ap_const_logic_0) & (exitcond_i_fu_158_p2 == ap_const_lv1_0));
end


always @ (img_data_stream_V_full_n or exitcond_i_reg_192) begin
    ap_sig_bdd_110 = ((img_data_stream_V_full_n == ap_const_logic_0) & (exitcond_i_reg_192 == ap_const_lv1_0));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_137 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_23 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_start or ap_done_reg or img_rows_V_empty_n or img_cols_V_empty_n or img_rows_V_out_full_n or img_cols_V_out_full_n) begin
    ap_sig_bdd_74 = ((img_rows_V_empty_n == ap_const_logic_0) | (img_cols_V_empty_n == ap_const_logic_0) | (img_rows_V_out_full_n == ap_const_logic_0) | (img_cols_V_out_full_n == ap_const_logic_0) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_86 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_97 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign exitcond5_i_fu_147_p2 = (p_1_i_reg_125 == rows_V_reg_173? 1'b1: 1'b0);

assign exitcond_i_fu_158_p2 = (p_i_reg_136 == cols_V_reg_178? 1'b1: 1'b0);

assign i_V_fu_152_p2 = (p_1_i_reg_125 + ap_const_lv12_1);

assign img_cols_V_out_din = img_cols_V_dout;

assign img_data_stream_V_din = tmp_data_V_reg_201;

assign img_rows_V_out_din = img_rows_V_dout;

assign j_V_fu_163_p2 = (p_i_reg_136 + ap_const_lv12_1);


endmodule //newsob_AXIvideo2Mat_DMA

