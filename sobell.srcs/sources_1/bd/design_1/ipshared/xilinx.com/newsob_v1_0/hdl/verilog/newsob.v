// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="newsob,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.358500,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=762,HLS_SYN_LUT=951}" *)

module newsob (
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST,
        ap_clk,
        ap_rst_n,
        ap_start,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY,
        ap_done,
        ap_idle,
        ap_ready
);

parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_true = 1'b1;

input  [7:0] INPUT_STREAM_TDATA;
input  [0:0] INPUT_STREAM_TKEEP;
input  [0:0] INPUT_STREAM_TSTRB;
input  [0:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [0:0] INPUT_STREAM_TID;
input  [0:0] INPUT_STREAM_TDEST;
output  [7:0] OUTPUT_STREAM_TDATA;
output  [0:0] OUTPUT_STREAM_TKEEP;
output  [0:0] OUTPUT_STREAM_TSTRB;
output  [0:0] OUTPUT_STREAM_TUSER;
output  [0:0] OUTPUT_STREAM_TLAST;
output  [0:0] OUTPUT_STREAM_TID;
output  [0:0] OUTPUT_STREAM_TDEST;
input   ap_clk;
input   ap_rst_n;
input   ap_start;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
output   OUTPUT_STREAM_TVALID;
input   OUTPUT_STREAM_TREADY;
output   ap_done;
output   ap_idle;
output   ap_ready;

reg ap_idle;
reg    ap_rst_n_inv;
wire    newsob_Block_proc_U0_ap_start;
wire    newsob_Block_proc_U0_ap_done;
wire    newsob_Block_proc_U0_ap_continue;
wire    newsob_Block_proc_U0_ap_idle;
wire    newsob_Block_proc_U0_ap_ready;
wire   [11:0] newsob_Block_proc_U0_img_0_rows_V_out_din;
wire    newsob_Block_proc_U0_img_0_rows_V_out_full_n;
wire    newsob_Block_proc_U0_img_0_rows_V_out_write;
wire   [11:0] newsob_Block_proc_U0_img_0_cols_V_out_din;
wire    newsob_Block_proc_U0_img_0_cols_V_out_full_n;
wire    newsob_Block_proc_U0_img_0_cols_V_out_write;
wire    newsob_AXIvideo2Mat_DMA_U0_ap_start;
wire    newsob_AXIvideo2Mat_DMA_U0_ap_done;
wire    newsob_AXIvideo2Mat_DMA_U0_ap_continue;
wire    newsob_AXIvideo2Mat_DMA_U0_ap_idle;
wire    newsob_AXIvideo2Mat_DMA_U0_ap_ready;
wire   [7:0] newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TDATA;
wire    newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TVALID;
wire    newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TREADY;
wire   [0:0] newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TKEEP;
wire   [0:0] newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TSTRB;
wire   [0:0] newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TUSER;
wire   [0:0] newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TLAST;
wire   [0:0] newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TID;
wire   [0:0] newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TDEST;
wire   [11:0] newsob_AXIvideo2Mat_DMA_U0_img_rows_V_dout;
wire    newsob_AXIvideo2Mat_DMA_U0_img_rows_V_empty_n;
wire    newsob_AXIvideo2Mat_DMA_U0_img_rows_V_read;
wire   [11:0] newsob_AXIvideo2Mat_DMA_U0_img_cols_V_dout;
wire    newsob_AXIvideo2Mat_DMA_U0_img_cols_V_empty_n;
wire    newsob_AXIvideo2Mat_DMA_U0_img_cols_V_read;
wire   [7:0] newsob_AXIvideo2Mat_DMA_U0_img_data_stream_V_din;
wire    newsob_AXIvideo2Mat_DMA_U0_img_data_stream_V_full_n;
wire    newsob_AXIvideo2Mat_DMA_U0_img_data_stream_V_write;
wire   [11:0] newsob_AXIvideo2Mat_DMA_U0_img_rows_V_out_din;
wire    newsob_AXIvideo2Mat_DMA_U0_img_rows_V_out_full_n;
wire    newsob_AXIvideo2Mat_DMA_U0_img_rows_V_out_write;
wire   [11:0] newsob_AXIvideo2Mat_DMA_U0_img_cols_V_out_din;
wire    newsob_AXIvideo2Mat_DMA_U0_img_cols_V_out_full_n;
wire    newsob_AXIvideo2Mat_DMA_U0_img_cols_V_out_write;
reg    newsob_Sobel_U0_ap_start = 1'b0;
wire    newsob_Sobel_U0_ap_done;
wire    newsob_Sobel_U0_ap_continue;
wire    newsob_Sobel_U0_ap_idle;
wire    newsob_Sobel_U0_ap_ready;
wire   [11:0] newsob_Sobel_U0_p_src_rows_V_dout;
wire    newsob_Sobel_U0_p_src_rows_V_empty_n;
wire    newsob_Sobel_U0_p_src_rows_V_read;
wire   [11:0] newsob_Sobel_U0_p_src_cols_V_dout;
wire    newsob_Sobel_U0_p_src_cols_V_empty_n;
wire    newsob_Sobel_U0_p_src_cols_V_read;
wire   [7:0] newsob_Sobel_U0_p_src_data_stream_V_dout;
wire    newsob_Sobel_U0_p_src_data_stream_V_empty_n;
wire    newsob_Sobel_U0_p_src_data_stream_V_read;
wire   [7:0] newsob_Sobel_U0_p_dst_data_stream_V_din;
wire    newsob_Sobel_U0_p_dst_data_stream_V_full_n;
wire    newsob_Sobel_U0_p_dst_data_stream_V_write;
reg    newsob_Mat2AXIvideo_DMA_U0_ap_start = 1'b0;
wire    newsob_Mat2AXIvideo_DMA_U0_ap_done;
wire    newsob_Mat2AXIvideo_DMA_U0_ap_continue;
wire    newsob_Mat2AXIvideo_DMA_U0_ap_idle;
wire    newsob_Mat2AXIvideo_DMA_U0_ap_ready;
wire   [7:0] newsob_Mat2AXIvideo_DMA_U0_img_data_stream_V_dout;
wire    newsob_Mat2AXIvideo_DMA_U0_img_data_stream_V_empty_n;
wire    newsob_Mat2AXIvideo_DMA_U0_img_data_stream_V_read;
wire   [7:0] newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TDATA;
wire    newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TVALID;
wire    newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TREADY;
wire   [0:0] newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TKEEP;
wire   [0:0] newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TSTRB;
wire   [0:0] newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TUSER;
wire   [0:0] newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TLAST;
wire   [0:0] newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TID;
wire   [0:0] newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TDEST;
wire    ap_sig_hs_continue;
wire    img_0_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] img_0_rows_V_channel_din;
wire    img_0_rows_V_channel_full_n;
wire    img_0_rows_V_channel_write;
wire   [11:0] img_0_rows_V_channel_dout;
wire    img_0_rows_V_channel_empty_n;
wire    img_0_rows_V_channel_read;
wire    img_0_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] img_0_cols_V_channel_din;
wire    img_0_cols_V_channel_full_n;
wire    img_0_cols_V_channel_write;
wire   [11:0] img_0_cols_V_channel_dout;
wire    img_0_cols_V_channel_empty_n;
wire    img_0_cols_V_channel_read;
wire    img_0_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] img_0_data_stream_0_V_din;
wire    img_0_data_stream_0_V_full_n;
wire    img_0_data_stream_0_V_write;
wire   [7:0] img_0_data_stream_0_V_dout;
wire    img_0_data_stream_0_V_empty_n;
wire    img_0_data_stream_0_V_read;
wire    img_0_rows_V_channel5_U_ap_dummy_ce;
wire   [11:0] img_0_rows_V_channel5_din;
wire    img_0_rows_V_channel5_full_n;
wire    img_0_rows_V_channel5_write;
wire   [11:0] img_0_rows_V_channel5_dout;
wire    img_0_rows_V_channel5_empty_n;
wire    img_0_rows_V_channel5_read;
wire    img_0_cols_V_channel6_U_ap_dummy_ce;
wire   [11:0] img_0_cols_V_channel6_din;
wire    img_0_cols_V_channel6_full_n;
wire    img_0_cols_V_channel6_write;
wire   [11:0] img_0_cols_V_channel6_dout;
wire    img_0_cols_V_channel6_empty_n;
wire    img_0_cols_V_channel6_read;
wire    img_1_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] img_1_data_stream_0_V_din;
wire    img_1_data_stream_0_V_full_n;
wire    img_1_data_stream_0_V_write;
wire   [7:0] img_1_data_stream_0_V_dout;
wire    img_1_data_stream_0_V_empty_n;
wire    img_1_data_stream_0_V_read;
reg    ap_reg_procdone_newsob_Block_proc_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_newsob_AXIvideo2Mat_DMA_U0 = 1'b0;
reg    ap_reg_procdone_newsob_Sobel_U0 = 1'b0;
reg    ap_reg_procdone_newsob_Mat2AXIvideo_DMA_U0 = 1'b0;
reg    ap_CS;
wire    ap_sig_top_allready;


newsob_Block_proc newsob_Block_proc_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( newsob_Block_proc_U0_ap_start ),
    .ap_done( newsob_Block_proc_U0_ap_done ),
    .ap_continue( newsob_Block_proc_U0_ap_continue ),
    .ap_idle( newsob_Block_proc_U0_ap_idle ),
    .ap_ready( newsob_Block_proc_U0_ap_ready ),
    .img_0_rows_V_out_din( newsob_Block_proc_U0_img_0_rows_V_out_din ),
    .img_0_rows_V_out_full_n( newsob_Block_proc_U0_img_0_rows_V_out_full_n ),
    .img_0_rows_V_out_write( newsob_Block_proc_U0_img_0_rows_V_out_write ),
    .img_0_cols_V_out_din( newsob_Block_proc_U0_img_0_cols_V_out_din ),
    .img_0_cols_V_out_full_n( newsob_Block_proc_U0_img_0_cols_V_out_full_n ),
    .img_0_cols_V_out_write( newsob_Block_proc_U0_img_0_cols_V_out_write )
);

newsob_AXIvideo2Mat_DMA newsob_AXIvideo2Mat_DMA_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( newsob_AXIvideo2Mat_DMA_U0_ap_start ),
    .ap_done( newsob_AXIvideo2Mat_DMA_U0_ap_done ),
    .ap_continue( newsob_AXIvideo2Mat_DMA_U0_ap_continue ),
    .ap_idle( newsob_AXIvideo2Mat_DMA_U0_ap_idle ),
    .ap_ready( newsob_AXIvideo2Mat_DMA_U0_ap_ready ),
    .INPUT_STREAM_TDATA( newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TDATA ),
    .INPUT_STREAM_TVALID( newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TVALID ),
    .INPUT_STREAM_TREADY( newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TREADY ),
    .INPUT_STREAM_TKEEP( newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TKEEP ),
    .INPUT_STREAM_TSTRB( newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TSTRB ),
    .INPUT_STREAM_TUSER( newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TUSER ),
    .INPUT_STREAM_TLAST( newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TLAST ),
    .INPUT_STREAM_TID( newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TID ),
    .INPUT_STREAM_TDEST( newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TDEST ),
    .img_rows_V_dout( newsob_AXIvideo2Mat_DMA_U0_img_rows_V_dout ),
    .img_rows_V_empty_n( newsob_AXIvideo2Mat_DMA_U0_img_rows_V_empty_n ),
    .img_rows_V_read( newsob_AXIvideo2Mat_DMA_U0_img_rows_V_read ),
    .img_cols_V_dout( newsob_AXIvideo2Mat_DMA_U0_img_cols_V_dout ),
    .img_cols_V_empty_n( newsob_AXIvideo2Mat_DMA_U0_img_cols_V_empty_n ),
    .img_cols_V_read( newsob_AXIvideo2Mat_DMA_U0_img_cols_V_read ),
    .img_data_stream_V_din( newsob_AXIvideo2Mat_DMA_U0_img_data_stream_V_din ),
    .img_data_stream_V_full_n( newsob_AXIvideo2Mat_DMA_U0_img_data_stream_V_full_n ),
    .img_data_stream_V_write( newsob_AXIvideo2Mat_DMA_U0_img_data_stream_V_write ),
    .img_rows_V_out_din( newsob_AXIvideo2Mat_DMA_U0_img_rows_V_out_din ),
    .img_rows_V_out_full_n( newsob_AXIvideo2Mat_DMA_U0_img_rows_V_out_full_n ),
    .img_rows_V_out_write( newsob_AXIvideo2Mat_DMA_U0_img_rows_V_out_write ),
    .img_cols_V_out_din( newsob_AXIvideo2Mat_DMA_U0_img_cols_V_out_din ),
    .img_cols_V_out_full_n( newsob_AXIvideo2Mat_DMA_U0_img_cols_V_out_full_n ),
    .img_cols_V_out_write( newsob_AXIvideo2Mat_DMA_U0_img_cols_V_out_write )
);

newsob_Sobel newsob_Sobel_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( newsob_Sobel_U0_ap_start ),
    .ap_done( newsob_Sobel_U0_ap_done ),
    .ap_continue( newsob_Sobel_U0_ap_continue ),
    .ap_idle( newsob_Sobel_U0_ap_idle ),
    .ap_ready( newsob_Sobel_U0_ap_ready ),
    .p_src_rows_V_dout( newsob_Sobel_U0_p_src_rows_V_dout ),
    .p_src_rows_V_empty_n( newsob_Sobel_U0_p_src_rows_V_empty_n ),
    .p_src_rows_V_read( newsob_Sobel_U0_p_src_rows_V_read ),
    .p_src_cols_V_dout( newsob_Sobel_U0_p_src_cols_V_dout ),
    .p_src_cols_V_empty_n( newsob_Sobel_U0_p_src_cols_V_empty_n ),
    .p_src_cols_V_read( newsob_Sobel_U0_p_src_cols_V_read ),
    .p_src_data_stream_V_dout( newsob_Sobel_U0_p_src_data_stream_V_dout ),
    .p_src_data_stream_V_empty_n( newsob_Sobel_U0_p_src_data_stream_V_empty_n ),
    .p_src_data_stream_V_read( newsob_Sobel_U0_p_src_data_stream_V_read ),
    .p_dst_data_stream_V_din( newsob_Sobel_U0_p_dst_data_stream_V_din ),
    .p_dst_data_stream_V_full_n( newsob_Sobel_U0_p_dst_data_stream_V_full_n ),
    .p_dst_data_stream_V_write( newsob_Sobel_U0_p_dst_data_stream_V_write )
);

newsob_Mat2AXIvideo_DMA newsob_Mat2AXIvideo_DMA_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( newsob_Mat2AXIvideo_DMA_U0_ap_start ),
    .ap_done( newsob_Mat2AXIvideo_DMA_U0_ap_done ),
    .ap_continue( newsob_Mat2AXIvideo_DMA_U0_ap_continue ),
    .ap_idle( newsob_Mat2AXIvideo_DMA_U0_ap_idle ),
    .ap_ready( newsob_Mat2AXIvideo_DMA_U0_ap_ready ),
    .img_data_stream_V_dout( newsob_Mat2AXIvideo_DMA_U0_img_data_stream_V_dout ),
    .img_data_stream_V_empty_n( newsob_Mat2AXIvideo_DMA_U0_img_data_stream_V_empty_n ),
    .img_data_stream_V_read( newsob_Mat2AXIvideo_DMA_U0_img_data_stream_V_read ),
    .OUTPUT_STREAM_TDATA( newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TDATA ),
    .OUTPUT_STREAM_TVALID( newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TVALID ),
    .OUTPUT_STREAM_TREADY( newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TREADY ),
    .OUTPUT_STREAM_TKEEP( newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TKEEP ),
    .OUTPUT_STREAM_TSTRB( newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TSTRB ),
    .OUTPUT_STREAM_TUSER( newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TUSER ),
    .OUTPUT_STREAM_TLAST( newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TLAST ),
    .OUTPUT_STREAM_TID( newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TID ),
    .OUTPUT_STREAM_TDEST( newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TDEST )
);

FIFO_newsob_img_0_rows_V_channel img_0_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_0_rows_V_channel_U_ap_dummy_ce ),
    .if_din( img_0_rows_V_channel_din ),
    .if_full_n( img_0_rows_V_channel_full_n ),
    .if_write( img_0_rows_V_channel_write ),
    .if_dout( img_0_rows_V_channel_dout ),
    .if_empty_n( img_0_rows_V_channel_empty_n ),
    .if_read( img_0_rows_V_channel_read )
);

FIFO_newsob_img_0_cols_V_channel img_0_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_0_cols_V_channel_U_ap_dummy_ce ),
    .if_din( img_0_cols_V_channel_din ),
    .if_full_n( img_0_cols_V_channel_full_n ),
    .if_write( img_0_cols_V_channel_write ),
    .if_dout( img_0_cols_V_channel_dout ),
    .if_empty_n( img_0_cols_V_channel_empty_n ),
    .if_read( img_0_cols_V_channel_read )
);

FIFO_newsob_img_0_data_stream_0_V img_0_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_0_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_0_data_stream_0_V_din ),
    .if_full_n( img_0_data_stream_0_V_full_n ),
    .if_write( img_0_data_stream_0_V_write ),
    .if_dout( img_0_data_stream_0_V_dout ),
    .if_empty_n( img_0_data_stream_0_V_empty_n ),
    .if_read( img_0_data_stream_0_V_read )
);

FIFO_newsob_img_0_rows_V_channel5 img_0_rows_V_channel5_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_rows_V_channel5_U_ap_dummy_ce ),
    .if_write_ce( img_0_rows_V_channel5_U_ap_dummy_ce ),
    .if_din( img_0_rows_V_channel5_din ),
    .if_full_n( img_0_rows_V_channel5_full_n ),
    .if_write( img_0_rows_V_channel5_write ),
    .if_dout( img_0_rows_V_channel5_dout ),
    .if_empty_n( img_0_rows_V_channel5_empty_n ),
    .if_read( img_0_rows_V_channel5_read )
);

FIFO_newsob_img_0_cols_V_channel6 img_0_cols_V_channel6_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_cols_V_channel6_U_ap_dummy_ce ),
    .if_write_ce( img_0_cols_V_channel6_U_ap_dummy_ce ),
    .if_din( img_0_cols_V_channel6_din ),
    .if_full_n( img_0_cols_V_channel6_full_n ),
    .if_write( img_0_cols_V_channel6_write ),
    .if_dout( img_0_cols_V_channel6_dout ),
    .if_empty_n( img_0_cols_V_channel6_empty_n ),
    .if_read( img_0_cols_V_channel6_read )
);

FIFO_newsob_img_1_data_stream_0_V img_1_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_1_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_1_data_stream_0_V_din ),
    .if_full_n( img_1_data_stream_0_V_full_n ),
    .if_write( img_1_data_stream_0_V_write ),
    .if_dout( img_1_data_stream_0_V_dout ),
    .if_empty_n( img_1_data_stream_0_V_empty_n ),
    .if_read( img_1_data_stream_0_V_read )
);



always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_newsob_AXIvideo2Mat_DMA_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_newsob_AXIvideo2Mat_DMA_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_newsob_AXIvideo2Mat_DMA_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == newsob_AXIvideo2Mat_DMA_U0_ap_done)) begin
            ap_reg_procdone_newsob_AXIvideo2Mat_DMA_U0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_newsob_Block_proc_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_newsob_Block_proc_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_newsob_Block_proc_U0 <= ap_const_logic_0;
        end else if ((newsob_Block_proc_U0_ap_done == ap_const_logic_1)) begin
            ap_reg_procdone_newsob_Block_proc_U0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_newsob_Mat2AXIvideo_DMA_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_newsob_Mat2AXIvideo_DMA_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_newsob_Mat2AXIvideo_DMA_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == newsob_Mat2AXIvideo_DMA_U0_ap_done)) begin
            ap_reg_procdone_newsob_Mat2AXIvideo_DMA_U0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_newsob_Sobel_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_newsob_Sobel_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_newsob_Sobel_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == newsob_Sobel_U0_ap_done)) begin
            ap_reg_procdone_newsob_Sobel_U0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_newsob_Mat2AXIvideo_DMA_U0_ap_start
    if (ap_rst_n_inv == 1'b1) begin
        newsob_Mat2AXIvideo_DMA_U0_ap_start <= ap_const_logic_0;
    end else begin
        newsob_Mat2AXIvideo_DMA_U0_ap_start <= ap_const_logic_1;
    end
end

always @ (posedge ap_clk) begin : ap_ret_newsob_Sobel_U0_ap_start
    if (ap_rst_n_inv == 1'b1) begin
        newsob_Sobel_U0_ap_start <= ap_const_logic_0;
    end else begin
        newsob_Sobel_U0_ap_start <= ap_const_logic_1;
    end
end

always @ (posedge ap_clk) begin
    ap_CS <= ap_const_logic_0;
end

always @ (newsob_Block_proc_U0_ap_idle or newsob_AXIvideo2Mat_DMA_U0_ap_idle or newsob_Sobel_U0_ap_idle or newsob_Mat2AXIvideo_DMA_U0_ap_idle) begin
    if (((newsob_Block_proc_U0_ap_idle == ap_const_logic_1) & (ap_const_logic_1 == newsob_AXIvideo2Mat_DMA_U0_ap_idle) & (ap_const_logic_1 == newsob_Sobel_U0_ap_idle) & (ap_const_logic_1 == newsob_Mat2AXIvideo_DMA_U0_ap_idle))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (newsob_Mat2AXIvideo_DMA_U0_ap_done) begin
    if ((ap_const_logic_1 == newsob_Mat2AXIvideo_DMA_U0_ap_done)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

assign INPUT_STREAM_TREADY = newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TREADY;

assign OUTPUT_STREAM_TDATA = newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TDATA;

assign OUTPUT_STREAM_TDEST = newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TDEST;

assign OUTPUT_STREAM_TID = newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TID;

assign OUTPUT_STREAM_TKEEP = newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TKEEP;

assign OUTPUT_STREAM_TLAST = newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TLAST;

assign OUTPUT_STREAM_TSTRB = newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TSTRB;

assign OUTPUT_STREAM_TUSER = newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TUSER;

assign OUTPUT_STREAM_TVALID = newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TVALID;

assign ap_done = ap_sig_hs_done;

assign ap_ready = ap_sig_top_allready;


always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sig_hs_continue = ap_const_logic_1;

assign ap_sig_top_allready = newsob_AXIvideo2Mat_DMA_U0_ap_ready;

assign img_0_cols_V_channel6_U_ap_dummy_ce = ap_const_logic_1;

assign img_0_cols_V_channel6_din = newsob_AXIvideo2Mat_DMA_U0_img_cols_V_out_din;

assign img_0_cols_V_channel6_read = newsob_Sobel_U0_p_src_cols_V_read;

assign img_0_cols_V_channel6_write = newsob_AXIvideo2Mat_DMA_U0_img_cols_V_out_write;

assign img_0_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;

assign img_0_cols_V_channel_din = newsob_Block_proc_U0_img_0_cols_V_out_din;

assign img_0_cols_V_channel_read = newsob_AXIvideo2Mat_DMA_U0_img_cols_V_read;

assign img_0_cols_V_channel_write = newsob_Block_proc_U0_img_0_cols_V_out_write;

assign img_0_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;

assign img_0_data_stream_0_V_din = newsob_AXIvideo2Mat_DMA_U0_img_data_stream_V_din;

assign img_0_data_stream_0_V_read = newsob_Sobel_U0_p_src_data_stream_V_read;

assign img_0_data_stream_0_V_write = newsob_AXIvideo2Mat_DMA_U0_img_data_stream_V_write;

assign img_0_rows_V_channel5_U_ap_dummy_ce = ap_const_logic_1;

assign img_0_rows_V_channel5_din = newsob_AXIvideo2Mat_DMA_U0_img_rows_V_out_din;

assign img_0_rows_V_channel5_read = newsob_Sobel_U0_p_src_rows_V_read;

assign img_0_rows_V_channel5_write = newsob_AXIvideo2Mat_DMA_U0_img_rows_V_out_write;

assign img_0_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;

assign img_0_rows_V_channel_din = newsob_Block_proc_U0_img_0_rows_V_out_din;

assign img_0_rows_V_channel_read = newsob_AXIvideo2Mat_DMA_U0_img_rows_V_read;

assign img_0_rows_V_channel_write = newsob_Block_proc_U0_img_0_rows_V_out_write;

assign img_1_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;

assign img_1_data_stream_0_V_din = newsob_Sobel_U0_p_dst_data_stream_V_din;

assign img_1_data_stream_0_V_read = newsob_Mat2AXIvideo_DMA_U0_img_data_stream_V_read;

assign img_1_data_stream_0_V_write = newsob_Sobel_U0_p_dst_data_stream_V_write;

assign newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TDATA = INPUT_STREAM_TDATA;

assign newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TDEST = INPUT_STREAM_TDEST;

assign newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TID = INPUT_STREAM_TID;

assign newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TKEEP = INPUT_STREAM_TKEEP;

assign newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TLAST = INPUT_STREAM_TLAST;

assign newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TSTRB = INPUT_STREAM_TSTRB;

assign newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TUSER = INPUT_STREAM_TUSER;

assign newsob_AXIvideo2Mat_DMA_U0_INPUT_STREAM_TVALID = INPUT_STREAM_TVALID;

assign newsob_AXIvideo2Mat_DMA_U0_ap_continue = ap_const_logic_1;

assign newsob_AXIvideo2Mat_DMA_U0_ap_start = ap_start;

assign newsob_AXIvideo2Mat_DMA_U0_img_cols_V_dout = img_0_cols_V_channel_dout;

assign newsob_AXIvideo2Mat_DMA_U0_img_cols_V_empty_n = img_0_cols_V_channel_empty_n;

assign newsob_AXIvideo2Mat_DMA_U0_img_cols_V_out_full_n = img_0_cols_V_channel6_full_n;

assign newsob_AXIvideo2Mat_DMA_U0_img_data_stream_V_full_n = img_0_data_stream_0_V_full_n;

assign newsob_AXIvideo2Mat_DMA_U0_img_rows_V_dout = img_0_rows_V_channel_dout;

assign newsob_AXIvideo2Mat_DMA_U0_img_rows_V_empty_n = img_0_rows_V_channel_empty_n;

assign newsob_AXIvideo2Mat_DMA_U0_img_rows_V_out_full_n = img_0_rows_V_channel5_full_n;

assign newsob_Block_proc_U0_ap_continue = ap_const_logic_1;

assign newsob_Block_proc_U0_ap_start = ap_start;

assign newsob_Block_proc_U0_img_0_cols_V_out_full_n = img_0_cols_V_channel_full_n;

assign newsob_Block_proc_U0_img_0_rows_V_out_full_n = img_0_rows_V_channel_full_n;

assign newsob_Mat2AXIvideo_DMA_U0_OUTPUT_STREAM_TREADY = OUTPUT_STREAM_TREADY;

assign newsob_Mat2AXIvideo_DMA_U0_ap_continue = ap_sig_hs_continue;

assign newsob_Mat2AXIvideo_DMA_U0_img_data_stream_V_dout = img_1_data_stream_0_V_dout;

assign newsob_Mat2AXIvideo_DMA_U0_img_data_stream_V_empty_n = img_1_data_stream_0_V_empty_n;

assign newsob_Sobel_U0_ap_continue = ap_const_logic_1;

assign newsob_Sobel_U0_p_dst_data_stream_V_full_n = img_1_data_stream_0_V_full_n;

assign newsob_Sobel_U0_p_src_cols_V_dout = img_0_cols_V_channel6_dout;

assign newsob_Sobel_U0_p_src_cols_V_empty_n = img_0_cols_V_channel6_empty_n;

assign newsob_Sobel_U0_p_src_data_stream_V_dout = img_0_data_stream_0_V_dout;

assign newsob_Sobel_U0_p_src_data_stream_V_empty_n = img_0_data_stream_0_V_empty_n;

assign newsob_Sobel_U0_p_src_rows_V_dout = img_0_rows_V_channel5_dout;

assign newsob_Sobel_U0_p_src_rows_V_empty_n = img_0_rows_V_channel5_empty_n;


endmodule //newsob

